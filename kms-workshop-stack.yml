AWSTemplateFormatVersion: 2010-09-09
Description: CloudFormation template for creating workshop resources.

Parameters:

  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String

  VpcCIDR:
    Description: Please enter the IP range (CIDR notation) for this VPC
    Type: String
    Default: 10.192.0.0/16

  PublicSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
    Type: String
    Default: 10.192.10.0/24

  PrivateSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
    Type: String
    Default: 10.192.20.0/24

  PrivateSubnet2CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the second Availability Zone
    Type: String
    Default: 10.192.21.0/24

Resources:

  S3kmslabBucket:
        Type: "AWS::S3::Bucket"
        Properties:
          PublicAccessBlockConfiguration:
            BlockPublicAcls: true
            BlockPublicPolicy: true
            IgnorePublicAcls: true
            RestrictPublicBuckets: true
          VersioningConfiguration:
            Status: Enabled
          BucketName: !Join
            - ''
            - - 'kmsworkshop-'
              - !Ref 'AWS::AccountId'

  SGkmslabLabPublicEC2SSH:
        Type: "AWS::EC2::SecurityGroup"
        Properties:
          GroupDescription: Security group for Public EC2 SSH port
          VpcId: !Ref VPC
    #Security Group for Private Subnets in Producer VPC.
  SGkmslabLabPrivateEC2:
        Type: "AWS::EC2::SecurityGroup"
        Properties:
          GroupDescription: Security controls for EC2 instances instance
          VpcId: !Ref VPC
  EC2ToS3Role:
        Type: "AWS::IAM::Role"
        Properties:
          AssumeRolePolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Sid: ""
                Effect: "Allow"
                Principal:
                  Service:
                    - "ec2.amazonaws.com"
                    - "vpc-flow-logs.amazonaws.com"
                Action:
                  - "sts:AssumeRole"
          ManagedPolicyArns:
            - "arn:aws:iam::aws:policy/AmazonS3FullAccess"
            - "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
          RoleName: !Join
            - ''
            - - 'kmslabrole1-'
              - !Ref 'AWS::AccountId'

  EC2ToKMSRole:
        Type: "AWS::IAM::Role"
        Properties:
          AssumeRolePolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Sid: ""
                Effect: "Allow"
                Principal:
                  Service:
                    - "ec2.amazonaws.com"
                    - "vpc-flow-logs.amazonaws.com"
                Action:
                  - "sts:AssumeRole"
          ManagedPolicyArns:
            - "arn:aws:iam::aws:policy/AmazonS3FullAccess"
            - "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
          RoleName: !Join
            - ''
            - - 'kmslabrole2-'
              - !Ref 'AWS::AccountId'

  IAMS3InstanceProfile:
        Type: "AWS::IAM::InstanceProfile"
        Properties:
          Path: "/"
          Roles:
            -
              !Ref EC2ToS3Role

  IAMKMSInstanceProfile:
          Type: "AWS::IAM::InstanceProfile"
          Properties:
            Path: "/"
            Roles:
              -
                !Ref EC2ToKMSRole

  VPC:
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: !Ref VpcCIDR
            EnableDnsSupport: true
            EnableDnsHostnames: true
            Tags:
                - Key: Name
                  Value: !Ref EnvironmentName

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 0, !GetAZs '' ]
            CidrBlock: !Ref PublicSubnet1CIDR
            MapPublicIpOnLaunch: true
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} Public Subnet (AZ1)

  PrivateSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 0, !GetAZs '' ]
            CidrBlock: !Ref PrivateSubnet1CIDR
            Tags:
               - Key: "Name"
                 Value: !Sub ${EnvironmentName} Private Subnet (AZ1)

  PrivateSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 0, !GetAZs '' ]
            CidrBlock: !Ref PrivateSubnet2CIDR
            Tags:
               - Key: "Name"
                 Value: !Sub ${EnvironmentName} Private Subnet (AZ2)

  PublicEC2Instance:
      Type: AWS::EC2::Instance
      DependsOn: InternetGatewayAttachment
      Properties:
        ImageId: "ami-0080e4c5bc078760e"
        InstanceType: "t2.micro"
        SecurityGroupIds:
            - !Ref SGkmslabLabPublicEC2SSH
        IamInstanceProfile: !Ref IAMS3InstanceProfile
        SubnetId: !Ref PublicSubnet1
        Monitoring: true
        Tags:
          -
            Key: "Name"
            Value: !Sub ${EnvironmentName} Public EC2
        UserData:
            "Fn::Base64":
                "Fn::Sub": |
                    #!/bin/bash
                    sudo yum update -y
                    sudo yum install -y httpd
                    sudo service httpd start
                    sudo chkconfig httpd on
                    sudo chmod o+w /var/www/html
                    sudo echo '<h1> Congratulation!. CloudFormation Stack is successfully completed. Welcome to KMS Workshop. </h1>' > /var/www/html/index.html
                    sudo echo "AWS_DEFAULT_REGION=us-east-1">>/etc/environment
                    curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
                    unzip awscliv2.zip
                    sudo ./aws/install

  PrivateEC2Instance1:
      Type: AWS::EC2::Instance
      DependsOn: DefaultPrivateRoute1
      Properties:
        ImageId: "ami-0080e4c5bc078760e"
        InstanceType: "t2.micro"
        IamInstanceProfile: !Ref IAMKMSInstanceProfile
        SecurityGroupIds:
            - !Ref SGkmslabLabPrivateEC2
        SubnetId: !Ref PrivateSubnet1
        Monitoring: true
        Tags:
          -
            Key: "Name"
            Value: !Sub ${EnvironmentName} Private1 EC2
        UserData:
            "Fn::Base64":
                "Fn::Sub": |
                    #!/bin/bash
                    sudo yum update -y
                    sudo yum install -y httpd
                    sudo service httpd start
                    sudo chkconfig httpd on
                    sudo chmod o+w /var/www/html
                    sudo echo '<h1> Congratulation!. CloudFormation Stack is successfully completed. Welcome to KMS Workshop. </h1>' > /var/www/html/index.html
                    sudo echo "AWS_DEFAULT_REGION=us-east-1">>/etc/environment
                    curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
                    unzip awscliv2.zip
                    sudo ./aws/install

  WebElasticIp:
        Type: AWS::EC2::EIP
        Properties:
          InstanceId: !Ref PublicEC2Instance
          Domain: vpc

  NatGateway1EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc

  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway1EIP.AllocationId
      SubnetId: !Ref PublicSubnet1

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Routes

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Routes (AZ1)

  DefaultPrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: !Ref PrivateSubnet1

  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Routes (AZ2)

  DefaultPrivateRoute2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      SubnetId: !Ref PrivateSubnet2

Outputs:
  VPC:
    Description: A reference to the created VPC
    Value: !Ref VPC

  PrivateSubnets:
    Description: A list of the private subnets
    Value: !Join [ ",", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2 ]]

  PublicSubnet1:
    Description: A reference to the public subnet in the 1st Availability Zone
    Value: !Ref PublicSubnet1

  PrivateSubnet1:
    Description: A reference to the private subnet in the 1st Availability Zone
    Value: !Ref PrivateSubnet1

  PrivateSubnet2:
    Description: A reference to the private subnet in the 2nd Availability Zone
    Value: !Ref PrivateSubnet2

  InstanceID:
    Description: The Instance ID
    Value: !Ref PublicEC2Instance
